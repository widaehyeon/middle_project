<?xml version="1.0" encoding="UTF-8"?>
<!-- DOCTYPE 지정 -->
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice">


<select id="countList" resultType="int" >
select count(*) from notice
</select>


<!-- 공지사항 등록(새 글 작성) -->
<insert id="insertNotice" parameterType="vo.NoticeVO">
INSERT INTO NOTICE 
(
notice_code,
NOTICE_TITLE,
ADMIN_ID,
NOTICE_CONTENT,
NOTICE_DATE
) VALUES (
notice_seq.nextval, #{noticeTitle}, #{adminId}, #{noticeContent}, sysdate)
</insert>

 <!-- 공지사항 수정 -->
   <update id="updateNotice" parameterType="vo.NoticeVO">
 update notice
	set notice_title = #{noticeTitle} ,
		notice_content = #{noticeContent}
  where notice_code = #{noticeCode}
   </update>
   
<!-- 공지사항 삭제 -->
   <delete id="deleteNotice" parameterType="String">
     delete notice 
     where notice_code = #{noticeCode}
   </delete>



<!-- 공지사항 목록 조회   -->
<select id="selectAllNotice" resultType="vo.NoticeVO" parameterType="map">
		SELECT A.* 
		 FROM(
			 SELECT ROWNUM AS RNUM,
					B.* 
			   FROM (
					 SELECT * FROM notice
					 where 1=1
					 	<if test="sfl != null and sfl != ''"> 
						   <choose>
						      <when test="sfl.equalsIgnoreCase('wr_subject')">
						           and NOTICE_TITLE like '%' || #{stx} || '%'
						      </when> 
						      <when test="sfl.equalsIgnoreCase('wr_content')">
						           and NOTICE_CONTENT like '%' || #{stx} || '%'
						      </when>
						      <otherwise>
						           and (NOTICE_TITLE like '%' || #{stx} || '%' OR NOTICE_CONTENT like '%' || #{stx} || '%')
						   </otherwise> 
						   </choose> 
						</if>
					 ORDER BY ROWNUM DESC)B
					
	<![CDATA[
		   	   WHERE ROWNUM <= #{end})A 
		 	where A.RNUM >= #{start}
		 	order by notice_code desc
	]]>
	
</select>

<!-- 공지사항 세부 내용 조회  -->
<select id="selectNotice" resultType="vo.NoticeVO">
SELECT
	a.notice_code,
    a.notice_title,
    a.notice_content,
    a.notice_date,
    a.notice_hits,
    b.admin_id,
    b.admin_Nm
FROM NOTICE A, ADMIN B
WHERE notice_code = #{noticeCode} 
 and A.ADMIN_ID=B.ADMIN_ID
</select>

<!-- 조회수 올리기 -->
<update id="updateHits" parameterType="vo.NoticeVO">
      update notice
        set notice_hits = notice_hits + 1
        where notice_code = #{noticeCode}
</update>


<!-- 공지사항 번호가 있는지 체크  -->
	<select id="checkNotice" parameterType="String" resultType="int">
		select count(*) as cnt
		from notice
		where notice_code = #{noticeCode}
	</select>


<!-- 공지사항 검색 기능  -->
   <select id="searchNotice" parameterType="NoticeVO">
      select * from notice where 1=1
   
      
<!--       <if test="noticeTitle != null and noticeTitle != ''"> -->
<!--                and notice_title = #{noticeTitle} -->
<!--       </if> -->
      
<!--       <if test="noticeContent != null and noticeContent != ''"> -->
<!--                and notice_content = #{noticeContent} -->
<!--       </if> -->
  
<!--       <if test="(noticeTitle != null and noticeTitle != '')  -->
<!--       		|| (noticeContent != null and noticeContent != '')"> -->
<!--                and notice_title like '%' || #{notice_title} || '%' -->
<!--                 and notice_content = #{noticeContent} -->
<!--       </if> -->
   </select>
   
   
   	<!-- EVENT 메인  -->
	<select id="NoticeAll" parameterType="hashMap" resultType="vo.NoticeVO">
		<!-- 메인에서 4개뜨기   -->
	
		
		<![CDATA[
		WITH T AS(
		    SELECT ROW_NUMBER() OVER (ORDER BY NOTICE_CODE DESC) RNUM
		         , NOTICE_CODE, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_DATE
		    FROM   NOTICE
		)
		SELECT * FROM T
		WHERE T.RNUM <= 4
		]]>
	</select>
	
   
   

</mapper>